import { Part } from '@google/genai';

/**
 * @en Represents the identifier for each tab in the main navigation.
 * @de Repräsentiert den Bezeichner für jeden Tab in der Hauptnavigation.
 */
export type ActiveTab = 'dashboard' | 'documents' | 'analysis' | 'generation' | 'library' | 'reports' | 'kpis' | 'agents' | 'strategy' | 'dispatch' | 'chronology' | 'entities' | 'knowledge' | 'contradictions' | 'settings' | 'legal' | 'un-submissions' | 'ethics' | 'audit' | 'graph';

/**
 * @en Defines the specific capabilities an AI agent can have.
 * @de Definiert die spezifischen Fähigkeiten, die ein KI-Agent haben kann.
 */
export type AgentCapability =
  | 'workload_calculation'
  | 'cost_analysis'
  | 'document_analysis'
  | 'information_extraction'
  | 'document_linking'
  | 'un_submission_assistance'
  | 'legal_analysis'
  | 'contradiction_detection'
  | 'compliance_check'
  | 'risk_assessment'
  | 'case_analysis'
  | 'report_generation'
  | 'attrition_analysis'
  | 'content_creation'
  | 'official_documents'
  | 'un_submission_finalization'
  | 'strategy_development'
  | 'kpi_suggestion'
  | 'task_suggestion'
  | 'research'
  | 'public_communication';

// --- Database Schema Types ---

/**
 * @en Represents a single event in a document's chain of custody, ensuring integrity.
 * @de Repräsentiert ein einzelnes Ereignis in der Überwachungskette eines Dokuments, um die Integrität zu gewährleisten.
 */
export interface ChainOfCustodyEvent {
    id: string;
    timestamp: string;
    action: string;
    contentHash: string;
}

/**
 * @en Represents an uploaded document in the system.
 * @de Repräsentiert ein hochgeladenes Dokument im System.
 */
export interface Document {
    id: string;
    name: string;
    type: string;
    content: string;
    size: number;
    uploadDate: string;
    classificationStatus: 'unclassified' | 'classifying' | 'classified' | 'failed';
    tags: string[];
    workCategory: string;
    chainOfCustody: ChainOfCustodyEvent[];
}

/**
 * @en Represents a document generated by an AI agent.
 * @de Repräsentiert ein von einem KI-Agenten generiertes Dokument.
 */
export interface GeneratedDocument {
    id: string;
    title: string;
    content: string;
    createdAt: string;
    status: 'draft' | 'review' | 'final';
    version: number;
}

/**
 * @en Represents a core entity in the case, such as a person, organization, or location.
 * @de Repräsentiert eine Kernentität im Fall, wie z.B. eine Person, eine Organisation oder einen Ort.
 */
export interface Entity {
    id: string;
    name: string;
    type: 'Person' | 'Organisation' | 'Standort' | 'Unbekannt';
    description: string;
}

/**
 * @en Represents a single piece of knowledge extracted or created, stored in the knowledge base.
 * @de Repräsentiert eine einzelne Wissenseinheit, die extrahiert oder erstellt und in der Wissensdatenbank gespeichert wurde.
 */
export interface KnowledgeItem {
    id: string;
    title: string;
    summary: string;
    category: string;
    tags: string[];
    sourceDocumentIds: string[];
    createdAt: string;
}

/**
 * @en Represents a single event on the case timeline.
 * @de Repräsentiert ein einzelnes Ereignis auf der Fall-Zeitleiste.
 */
export interface TimelineEvent {
    id: string;
    date: string;
    title: string;
    description: string;
    documentIds: string[];
}

/**
 * @en Represents a tag that can be applied to documents or knowledge items.
 * @de Repräsentiert ein Tag, das auf Dokumente oder Wissenseinträge angewendet werden kann.
 */
export interface Tag {
    id: string;
    name: string;
}

/**
 * @en Represents the join table for many-to-many relationships between Documents and Entities.
 * @de Repräsentiert die Verknüpfungstabelle für Many-to-Many-Beziehungen zwischen Dokumenten und Entitäten.
 */
export interface DocEntity {
    docId: string;
    entityId: string;
}

/**
 * @en Represents the join table for many-to-many relationships between KnowledgeItems and Tags.
 * @de Repräsentiert die Verknüpfungstabelle für Many-to-Many-Beziehungen zwischen Wissenseinträgen und Tags.
 */
export interface KnowledgeTag {
    knowledgeId: string;
    tagId: string;
}

/**
 * @en Represents a potential contradiction found between two statements from two documents.
 * @de Repräsentiert einen potenziellen Widerspruch, der zwischen zwei Aussagen aus zwei Dokumenten gefunden wurde.
 */
export interface Contradiction {
    id: string;
    statement1: string;
    statement2: string;
    explanation: string;
    source1DocId: string;
    source2DocId: string;
}

/**
 * @en Represents the core, singleton context of a case.
 * @de Repräsentiert den zentralen, einzigartigen Kontext eines Falles.
 */
export interface CaseContext {
    id: number; // Always 1 for single record
    caseDescription: string;
    risks: Risks;
    mitigationStrategies: string;
}

/**
 * @en Represents a suggested task for the user.
 * @de Repräsentiert eine vorgeschlagene Aufgabe für den Benutzer.
 */
export interface Task {
    id: string;
    text: string;
    isCompleted: boolean;
    urgency: 'hoch' | 'mittel' | 'niedrig';
    source: string;
    createdAt: string;
}

// --- UI & State-related (Non-DB) Types ---

/**
 * @en The result of a high-level workload and cost analysis for a document.
 * @de Das Ergebnis einer übergeordneten Aufwands- und Kostenanalyse für ein Dokument.
 */
export interface DocumentAnalysis {
    complexity: 'hoch' | 'mittel' | 'niedrig';
    complexityJustification: string;
    workloadEstimate: { total: number; /* ... other fields */ };
    costEstimate: { recommended: number; /* ... other fields */ };
    documentType: string;
    recommendations: { urgency: 'hoch' | 'mittel' | 'niedrig'; text: string; }[];
    suggestedActions?: string[];
}

/**
 * @en A dictionary mapping document IDs to their analysis results.
 * @de Ein Verzeichnis, das Dokumenten-IDs ihren Analyseergebnissen zuordnet.
 */
export interface DocumentAnalysisResults {
    [docId: string]: DocumentAnalysis;
}

/**
 * @en The result of a detailed content analysis of a document.
 * @de Das Ergebnis einer detaillierten Inhaltsanalyse eines Dokuments.
 */
export interface DetailedAnalysis {
    beteiligte_parteien: { name: string; type: string; description: string; }[];
    zentrale_fakten: string[];
    schlüsselwörter: string[];
    sentiment: 'positiv' | 'negativ' | 'neutral';
    correspondenceAnalysis?: { findings: string[]; intent: string; riskAssessment: string; };
}

/**
 * @en A dictionary mapping document IDs to their detailed analysis results.
 * @de Ein Verzeichnis, das Dokumenten-IDs ihren detaillierten Analyseergebnissen zuordnet.
 */
export interface DetailedAnalysisResults {
    [docId: string]: DetailedAnalysis;
}

/**
 * @en Represents a single entry in the agent activity log.
 * @de Repräsentiert einen einzelnen Eintrag im Agenten-Aktivitätsprotokoll.
 */
export interface AgentActivity {
    id: string;
    timestamp: string;
    agentName: string;
    action: string;
    result: 'erfolg' | 'fehler';
}

/**
 * @en Represents the set of identified risks for a case.
 * @de Repräsentiert die Menge der identifizierten Risiken für einen Fall.
 */
export interface Risks {
    physical: boolean;
    legal: boolean;
    digital: boolean;
    intimidation: boolean;
    evidenceManipulation: boolean;
    secondaryTrauma: boolean;
    burnout: boolean;
    psychologicalBurden: boolean;
}

/**
 * @en Represents a Key Performance Indicator for tracking case progress.
 * @de Repräsentiert einen Key Performance Indicator zur Verfolgung des Fallfortschritts.
 */
export interface KPI {
    id: string;
    name: string;
    target: string;
    progress: number;
}

/**
 * @en Represents a single strategic insight generated by an AI agent.
 * @de Repräsentiert einen einzelnen strategischen Einblick, der von einem KI-Agenten generiert wurde.
 */
export interface Insight {
    id: string;
    text: string;
    source: string;
    type: 'observation' | 'recommendation' | 'risk';
}

/**
 * @en Represents an item in the pre-dispatch checklist.
 * @de Repräsentiert einen Punkt in der Checkliste vor dem Versand.
 */
export interface ChecklistItem {
    id: string;
    text: string;
    checked: boolean;
}

/**
 * @en Represents a relationship between two entities.
 * @de Repräsentiert eine Beziehung zwischen zwei Entitäten.
 */
export interface EntityRelationship {
    targetEntityId: string;
    targetEntityName: string;
    description: string;
}

/**
 * @en Extends the base Entity with relationship and document data for UI purposes.
 * @de Erweitert die Basis-Entität um Beziehungs- und Dokumentendaten für die Benutzeroberfläche.
 */
export interface CaseEntity extends Entity {
    relationships?: EntityRelationship[];
    documentIds?: string[];
}

/**
 * @en Represents a link (explicit or suggested) between two documents.
 * @de Repräsentiert eine Verknüpfung (explizit oder vorgeschlagen) zwischen zwei Dokumenten.
 */
export interface DocumentLink {
  id: string;
  sourceDocId: string;
  targetDocId: string;
  description: string;
  type: 'explicit' | 'suggested';
}

/**
 * @en Extends a DocumentLink with a reason for the suggestion.
 * @de Erweitert einen DocumentLink um einen Grund für den Vorschlag.
 */
export interface SuggestedLink extends DocumentLink {
    reason: string;
}

/**
 * @en Represents an entity suggested by an AI agent based on document content.
 * @de Repräsentiert eine von einem KI-Agenten basierend auf dem Dokumenteninhalt vorgeschlagene Entität.
 */
export interface SuggestedEntity {
    id: string;
    name: string;
    type: string;
    description: string;
    sourceDocumentId: string;
    sourceDocumentName: string;
}

/**
 * @en Represents a draft or submitted UN submission.
 * @de Repräsentiert eine entworfene oder eingereichte UN-Eingabe.
 */
export interface UNSubmission {
    id: string;
    title: string;
    status: 'draft' | 'submitted';
    content: { [section: string]: string };
}

/**
 * @en Represents the result of an ethics analysis.
 * @de Repräsentiert das Ergebnis einer Ethik-Analyse.
 */
export interface EthicsAnalysis {
    biasAssessment: string;
    privacyConcerns: string[];
    recommendations: string[];
}

/**
 * @en Represents an AI-generated summary of the entire case.
 * @de Repräsentiert eine KI-generierte Zusammenfassung des gesamten Falles.
 */
export interface CaseSummary {
    summary: string;
    identifiedRisks: { risk: string; description: string; }[];
    suggestedNextSteps: { step: string; justification: string; }[];
    generatedAt: string;
}

/**
 * @en Represents a single message in the analysis chat.
 * @de Repräsentiert eine einzelne Nachricht im Analyse-Chat.
 */
export interface AnalysisChatMessage {
    role: 'user' | 'model';
    text: string;
}

/**
 * @en Represents the settings for AI generation.
 * @de Repräsentiert die Einstellungen für die KI-Generierung.
 */
export interface AISettings {
    temperature: number;
    topP: number;
}

/**
 * @en Represents the thresholds for complexity calculation.
 * @de Repräsentiert die Schwellenwerte für die Komplexitätsberechnung.
 */
export interface ComplexitySettings {
    low: number;
    medium: number;
}

/**
 * @en Represents the overall application settings.
 * @de Repräsentiert die gesamten Anwendungseinstellungen.
 */
export interface AppSettings {
    ai: AISettings;
    complexity: ComplexitySettings;
}

/**
 * @en Represents a single entry in the user action audit log.
 * @de Repräsentiert einen einzelnen Eintrag im Audit-Log der Benutzeraktionen.
 */
export interface AuditLogEntry {
    id: string;
    timestamp: string;
    action: string;
    details: string;
}

/**
 * @en Represents the entire state of the application, used for context building and persistence.
 * @de Repräsentiert den gesamten Zustand der Anwendung, der für die Kontexterstellung und Persistenz verwendet wird.
 */
export interface AppState {
    documents: Document[];
    documentAnalysisResults: DocumentAnalysisResults;
    detailedAnalysisResults: DetailedAnalysisResults;
    generatedDocuments: GeneratedDocument[];
    caseDescription: string;
    agentActivityLog: AgentActivity[];
    risks: Risks;
    mitigationStrategies: string;
    kpis: KPI[];
    timelineEvents: TimelineEvent[];
    insights: Insight[];
    pinnedInsights: Insight[];
    dispatchDocument: GeneratedDocument | null;
    dispatchCoverLetter: string;
    dispatchChecklist: ChecklistItem[];
    caseEntities: CaseEntity[];
    suggestedEntities: SuggestedEntity[];
    knowledgeItems: KnowledgeItem[];
    contradictions: Contradiction[];
    documentLinks: DocumentLink[];
    suggestedLinks: SuggestedLink[];
    unSubmissions: UNSubmission[];
    ethicsAnalysis: EthicsAnalysis | null;
    caseSummary: CaseSummary | null;
    settings: AppSettings;
    tags: Tag[];
    auditLog: AuditLogEntry[];
}